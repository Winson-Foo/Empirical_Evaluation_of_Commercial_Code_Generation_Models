from dataclasses import dataclass
from typing import Any, Optional

@dataclass
class TrainerConf:
    target: str = "pytorch_lightning.trainer.Trainer"
    logger: Any = True
    enable_checkpointing: bool = True
    default_root_dir: Optional[str] = None
    gradient_clip_val: float = 0
    callbacks: Any = None
    num_nodes: int = 1
    num_processes: int = 1
    gpus: Optional[Any] = None
    auto_select_gpus: bool = False
    tpu_cores: Optional[Any] = None
    overfit_batches: Any = 0.0
    track_grad_norm: Any = -1
    check_val_every_n_epoch: int = 1
    fast_dev_run: Any = False
    accumulate_grad_batches: Any = 1
    max_epochs: int = 1000
    min_epochs: int = 1
    limit_train_batches: Any = 1.0
    limit_val_batches: Any = 1.0
    limit_test_batches: Any = 1.0
    val_check_interval: Any = 1.0
    log_every_n_steps: int = 50
    accelerator: Optional[Any] = None
    sync_batchnorm: bool = False
    precision: int = 32
    weights_save_path: Optional[str] = None
    num_sanity_val_steps: int = 2
    resume_from_checkpoint: Optional[Any] = None
    profiler: Optional[Any] = None
    benchmark: bool = False
    deterministic: bool = False
    auto_lr_find: Any = False
    replace_sampler_ddp: bool = True
    detect_anomaly: bool = False
    auto_scale_batch_size: Any = False
    plugins: Optional[Any] = None
    amp_backend: str = "native"
    amp_level: Optional[Any] = None
    move_metrics_to_cpu: bool = False
    gradient_clip_algorithm: Optional[str] = None
    devices: Optional[Any] = None
    ipus: Optional[int] = None
    enable_progress_bar: bool = True
    max_time: Optional[str] = None
    limit_predict_batches: float = 1.0
    strategy: Optional[str] = None
    enable_model_summary: bool = True
    reload_dataloaders_every_n_epochs: int = 0
    multiple_trainloader_mode: str = "max_size_cycle"